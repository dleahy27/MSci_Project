<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (223,345,322 samples, 0.07%)</title><rect x="13.1" y="197" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.15" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (93,506,568 samples, 0.03%)</title><rect x="11.0" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.03" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (56,517,424 samples, 0.02%)</title><rect x="12.6" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.64" y="79.5" ></text>
</g>
<g >
<title>[unknown] (322,252,244 samples, 0.10%)</title><rect x="12.9" y="261" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.85" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (221,301,397 samples, 0.07%)</title><rect x="12.0" y="165" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.01" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (39,799,900 samples, 0.01%)</title><rect x="10.6" y="69" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.60" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (352,147,706 samples, 0.11%)</title><rect x="11.5" y="261" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.51" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,960,153 samples, 0.02%)</title><rect x="840.3" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="843.33" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="239.5" ></text>
</g>
<g >
<title>[unknown] (197,049,823,685 samples, 63.72%)</title><rect x="309.4" y="261" width="751.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="312.40" y="271.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (125,370,694 samples, 0.04%)</title><rect x="10.9" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.91" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (142,818,193 samples, 0.05%)</title><rect x="10.2" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.21" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (89,590,051 samples, 0.03%)</title><rect x="11.0" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.05" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91,338,183 samples, 0.03%)</title><rect x="12.5" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.51" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="159.5" ></text>
</g>
<g >
<title>[unknown] (153,945,614,806 samples, 49.78%)</title><rect x="309.4" y="229" width="587.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="312.40" y="239.5" >[unknown]</text>
</g>
<g >
<title>LHAPDF::LogBicubicInterpolator::_interpolateXQ2 (71,794,602,206 samples, 23.21%)</title><rect x="35.5" y="261" width="273.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="38.47" y="271.5" >LHAPDF::LogBicubicInterpolator::_int..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (339,243,986 samples, 0.11%)</title><rect x="11.6" y="213" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.56" y="223.5" ></text>
</g>
<g >
<title>LHAPDF::GridPDF::interpolator@plt (1,141,479,671 samples, 0.37%)</title><rect x="374.7" y="213" width="4.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="377.73" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (86,653,003 samples, 0.03%)</title><rect x="10.4" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.42" y="143.5" ></text>
</g>
<g >
<title>testpdf (308,197,151,647 samples, 99.65%)</title><rect x="14.1" y="277" width="1175.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="17.08" y="287.5" >testpdf</text>
</g>
<g >
<title>[[kernel.kallsyms]] (193,885,233 samples, 0.06%)</title><rect x="13.3" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.26" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,675,817 samples, 0.02%)</title><rect x="10.5" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.48" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="143.5" ></text>
</g>
<g >
<title>log@@GLIBC_2.29 (3,713,341,686 samples, 1.20%)</title><rect x="1174.9" y="261" width="14.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1177.94" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,960,153 samples, 0.02%)</title><rect x="840.3" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="843.33" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,960,153 samples, 0.02%)</title><rect x="840.3" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="843.33" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (240,790,846 samples, 0.08%)</title><rect x="13.1" y="245" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.08" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (182,753,071 samples, 0.06%)</title><rect x="10.1" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.05" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58,267,232 samples, 0.02%)</title><rect x="11.2" y="101" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.17" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,034,822 samples, 0.01%)</title><rect x="10.6" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.63" y="63.5" ></text>
</g>
<g >
<title>LHAPDF::Interpolator::interpolateXQ2 (43,078,281,429 samples, 13.93%)</title><rect x="896.8" y="245" width="164.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="899.77" y="255.5" >LHAPDF::Interpolator:..</text>
</g>
<g >
<title>LHAPDF::GridPDF::interpolator (1,064,062,488 samples, 0.34%)</title><rect x="370.7" y="213" width="4.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="373.67" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,151,459 samples, 0.02%)</title><rect x="10.5" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.52" y="111.5" ></text>
</g>
<g >
<title>LHAPDF::PDF::xfxQ2 (19,728,000,252 samples, 6.38%)</title><rect x="539.1" y="213" width="75.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="542.06" y="223.5" >LHAPDF::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (160,587,072 samples, 0.05%)</title><rect x="13.4" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.39" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,490,194 samples, 0.01%)</title><rect x="10.6" y="85" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.58" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (129,428,024 samples, 0.04%)</title><rect x="10.9" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.90" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (228,724,667 samples, 0.07%)</title><rect x="13.1" y="213" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.13" y="223.5" ></text>
</g>
<g >
<title>LHAPDF::PDF::hasFlavor (16,029,193,379 samples, 5.18%)</title><rect x="477.9" y="213" width="61.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="480.90" y="223.5" >LHAPDF..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,165,410 samples, 0.03%)</title><rect x="10.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.40" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (136,980,255 samples, 0.04%)</title><rect x="12.3" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.33" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (330,302,667 samples, 0.11%)</title><rect x="11.6" y="197" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.59" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,962,842 samples, 0.03%)</title><rect x="10.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (196,663,434 samples, 0.06%)</title><rect x="10.0" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>swapper (674,399,950 samples, 0.22%)</title><rect x="11.5" y="277" width="2.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="14.51" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,583,659 samples, 0.03%)</title><rect x="11.1" y="117" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.06" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (69,719,553 samples, 0.02%)</title><rect x="12.6" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.59" y="95.5" ></text>
</g>
<g >
<title>LHAPDF::GridPDF::~GridPDF (153,945,614,806 samples, 49.78%)</title><rect x="309.4" y="245" width="587.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="312.40" y="255.5" >LHAPDF::GridPDF::~GridPDF</text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (124,343,401 samples, 0.04%)</title><rect x="13.5" y="101" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.53" y="111.5" ></text>
</g>
<g >
<title>kworker/dying (381,647,806 samples, 0.12%)</title><rect x="10.0" y="277" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (134,889,391 samples, 0.04%)</title><rect x="10.9" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.87" y="255.5" ></text>
</g>
<g >
<title>pow@plt (1,038,758,359 samples, 0.34%)</title><rect x="892.8" y="213" width="4.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="895.81" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35,432,126 samples, 0.01%)</title><rect x="12.7" y="37" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.72" y="47.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (59,284,956,796 samples, 19.17%)</title><rect x="614.3" y="213" width="226.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="617.33" y="223.5" >__ieee754_pow_fma</text>
</g>
<g >
<title>LHAPDF::(anonymous namespace)::_checkGridSize (5,293,246,660 samples, 1.71%)</title><rect x="15.3" y="261" width="20.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="18.27" y="271.5" ></text>
</g>
<g >
<title>[unknown] (184,984,372 samples, 0.06%)</title><rect x="10.8" y="261" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.75" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (344,118,339 samples, 0.11%)</title><rect x="11.5" y="229" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.54" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (206,336,286 samples, 0.07%)</title><rect x="13.2" y="181" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.21" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (257,767,736 samples, 0.08%)</title><rect x="11.9" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.87" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (193,418,063 samples, 0.06%)</title><rect x="10.0" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.01" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (115,466,959 samples, 0.04%)</title><rect x="10.9" y="181" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.95" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (344,605,926 samples, 0.11%)</title><rect x="11.5" y="245" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.54" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (198,434,181 samples, 0.06%)</title><rect x="12.1" y="149" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.10" y="159.5" ></text>
</g>
<g >
<title>main (4,412,249,018 samples, 1.43%)</title><rect x="840.5" y="213" width="16.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="843.53" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (129,428,024 samples, 0.04%)</title><rect x="10.9" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.90" y="223.5" ></text>
</g>
<g >
<title>@plt (311,297,024 samples, 0.10%)</title><rect x="14.1" y="261" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="17.08" y="271.5" ></text>
</g>
<g >
<title>log@plt (233,509,173 samples, 0.08%)</title><rect x="1189.1" y="261" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1192.11" y="271.5" ></text>
</g>
<g >
<title>all (309,267,546,379 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>LHAPDF::PDF::flavors (6,669,138,021 samples, 2.16%)</title><rect x="452.5" y="213" width="25.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="455.46" y="223.5" >L..</text>
</g>
<g >
<title>__ieee754_log_fma (29,775,642,967 samples, 9.63%)</title><rect x="1061.2" y="261" width="113.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1064.23" y="271.5" >__ieee754_log_..</text>
</g>
<g >
<title>pow@@GLIBC_2.29 (9,288,809,434 samples, 3.00%)</title><rect x="857.4" y="213" width="35.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="860.37" y="223.5" >pow..</text>
</g>
<g >
<title>LHAPDF::Interpolator::interpolateXQ2 (4,303,428,168 samples, 1.39%)</title><rect x="379.1" y="213" width="16.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="382.08" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (194,479,788 samples, 0.06%)</title><rect x="10.0" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.01" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (99,407,300 samples, 0.03%)</title><rect x="11.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="14.01" y="175.5" ></text>
</g>
<g >
<title>LHAPDF::LogBicubicInterpolator::_interpolateXQ2 (14,927,004,127 samples, 4.83%)</title><rect x="395.5" y="213" width="57.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="398.50" y="223.5" >LHAPDF..</text>
</g>
<g >
<title>LHAPDF::GridPDF::_xfxQ2 (16,058,535,093 samples, 5.19%)</title><rect x="309.4" y="213" width="61.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="312.40" y="223.5" >LHAPDF..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,960,153 samples, 0.02%)</title><rect x="840.3" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="843.33" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (228,724,667 samples, 0.07%)</title><rect x="13.1" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.13" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (112,427,418 samples, 0.04%)</title><rect x="12.4" y="117" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.43" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,941,579 samples, 0.02%)</title><rect x="309.2" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.20" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (194,308,973 samples, 0.06%)</title><rect x="10.0" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.01" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (169,149,097 samples, 0.05%)</title><rect x="13.4" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.35" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (49,288,100 samples, 0.02%)</title><rect x="12.7" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.67" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (155,975,147 samples, 0.05%)</title><rect x="13.4" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.40" y="127.5" ></text>
</g>
</g>
</svg>
